@using System.Globalization;


@{
    ViewData["Title"] = "OrderPage";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var culture = CultureInfo.CurrentCulture.Name;
}
@model HomeViewModel
<div class="container-fluid">
    <div class="row" style="margin: 10px">

        <div class="search-view" style="margin-left: 75%">
            <form asp-action="About" method="get">
                <div class="row">
                    <div class="group">
                        <svg class="icon" aria-hidden="true" viewBox="0 0 24 24"><g><path d="M21.53 20.47l-3.66-3.66C19.195 15.24 20 13.214 20 11c0-4.97-4.03-9-9-9s-9 4.03-9 9 4.03 9 9 9c2.215 0 4.24-.804 5.808-2.13l3.66 3.66c.147.146.34.22.53.22s.385-.073.53-.22c.295-.293.295-.767.002-1.06zM3.5 11c0-4.135 3.365-7.5 7.5-7.5s7.5 3.365 7.5 7.5-3.365 7.5-7.5 7.5-7.5-3.365-7.5-7.5z"></path></g></svg>
                        <input type="text" value="@ViewBag.Keyword" name="keyword" class="input" placeholder="Search" />
                    </div>
                    <select name="OrderStatusId" class="select">
                        <option value= "">Status</option>
                        <option value=0>
                            In GD1
                        </option>
                        <option value=1 >InTK1</option>
                        <option value=2>Canceled</option>
                    </select>
                    <div class="cold-md-3">
                        <button type="submit" class="button">
                            <svg enable-background="new 0 0 48 48" height="24" viewBox="0 0 48 48" width="24" xmlns="http://www.w3.org/2000/svg"><g id="_x32_-Magnifying_Glass"><path d="m40.8994141 39.4853516-7.8127441-7.8127441c2.3978882-2.734375 3.7209473-6.1942749 3.7209473-9.8649902 0-4.0068359-1.5605469-7.7734375-4.3935547-10.6064453s-6.5996094-4.3935547-10.6064453-4.3935547-7.7734375 1.5605469-10.6064453 4.3935547-4.3935547 6.5996094-4.3935547 10.6064453 1.5605469 7.7734375 4.3935547 10.6064453 6.5996094 4.3935547 10.6064453 4.3935547c3.6707153 0 7.1306152-1.3230591 9.8649902-3.7209473l7.8127441 7.8127441c.1953125.1953125.4511719.2929688.7070313.2929688s.5117188-.0976563.7070313-.2929688c.3906249-.390625.3906249-1.0234375-.0000001-1.4140625zm-28.2841797-8.4853516c-2.4550781-2.4555664-3.8076172-5.7202148-3.8076172-9.1923828s1.3525391-6.7368164 3.8076172-9.1923828c2.4555664-2.4550781 5.7202148-3.8076172 9.1923828-3.8076172s6.7368164 1.3525391 9.1923828 3.8076172c2.4550781 2.4555664 3.8076172 5.7202148 3.8076172 9.1923828s-1.3525391 6.7368164-3.8076172 9.1923828c-2.4555664 2.4550781-5.7202148 3.8076172-9.1923828 3.8076172s-6.7368164-1.3525391-9.1923828-3.8076172z" /></g></svg>
                        </button>

                    </div>
                </div>
            </form>
        </div>
    </div>

    <div class="ShowOrder">
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th>Tên Người Gửi</th>
                    <th>Tên Người Nhận</th>
                    <th>Đồ Vật</th>
                    <th>Địa chỉ nhận</th>
                    @if (User.IsInRole("GiaoDichVien"))
        {
                    <th>Hóa đơn </th>
        }
                    <th>Trạng thái</th>
                    <th>Transfer</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var order in Model.Orders.items)
                {

                    <tr>

                        <td>@order.SendName</td>
                        <td>@order.ReceiveName</td>
                        <td>@order.Code</td>
                        <td>@order.ReceiveAddress</td>
                        @if (User.IsInRole("GiaoDichVien"))
                        {
                            <td>
                                <form asp-controller="Order" asp-action="GetPdf" method="get">
                                    <input type="text" style="border-radius: 8px;" name="nameOfFile" placeholder="Enter file name" required>
                                    <button class="dow-btn" type="submit">
                                        <svg class="svgIcon" viewBox="0 0 384 512" height="1em" xmlns="http://www.w3.org/2000/svg"><path d="M169.4 470.6c12.5 12.5 32.8 12.5 45.3 0l160-160c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L224 370.8 224 64c0-17.7-14.3-32-32-32s-32 14.3-32 32l0 306.7L54.6 265.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3l160 160z"></path></svg>
                                    </button>
                                </form>
                            </td>
                        }
                        <td>@order.Status</td>
                        <td>
                            @if(order.Status == MagicPost__Data.Enums.OrderStatus.ToTk1
                            || order.Status  == MagicPost__Data.Enums.OrderStatus.ToTk2
                            || order.Status == MagicPost__Data.Enums.OrderStatus.ToGD2
                            || order.Status == MagicPost__Data.Enums.OrderStatus.Shipping)
                            {
                                @Html.ActionLink("Xác nhận", "Create", "Transfer", new { Id = order.Id })
                            }
                            else
                            {
                                @Html.ActionLink("Chuyển hàng", "Create", "Transfer", new { Id = order.Id })
                            }
                        </td>
                    </tr>
                }
                <!-- Thêm các hàng khác tùy vào số đơn hàng -->
            </tbody>
        </table>
    </div>
</div>

<style>
    body{
        
    }
    /* CSS để tạo bảng */
    table {
        border-collapse: collapse;
        width: 100%;
        margin-top: 20px;

    }

    th, td {
        border: 1px solid #ddd;
        padding: 8px;
        text-align: left;
    }

    th {
        background-color: #3498db;
        color: #fff;
    }

    .ShowOrder{
        height: 100vh;
    }

    .group {
        display: flex;
        line-height: 28px;
        align-items: center;
        position: relative;
        max-width: 190px;
    }

    .input {
        width: 100%;
        height: 44px;
        line-height: 28px;
        padding: 0 1rem;
        padding-left: 2.5rem;
        border: 2px solid transparent;
        border-radius: 8px;
        outline: none;
        background-color: #f3f3f4;
        color: #0d0c22;
        transition: .3s ease;
    }

        .input::placeholder {
            color: #9e9ea7;
        }

        .input:focus, input:hover {
            outline: none;
            border-color: rgba(39, 109, 245, 0.8);
            background-color: #fff;
            box-shadow: 0 0 0 4px rgb(34 154 240 / 10%);
        }

    .icon {
        position: absolute;
        left: 1rem;
        fill: #9e9ea7;
        width: 1rem;
        height: 1rem;
    }

    /* Thiết lập kiểu chung cho select */
    select {
        margin-left: 2px;
        width: 100px;
        padding: 8px;
        font-size: 14px;
        border: 1px solid #ccc;
        border-radius: 8px;
        box-sizing: border-box;
        appearance: none; /* Loại bỏ giao diện mặc định của select */
    }

        /* Thiết lập kiểu cho lựa chọn được chọn */
        select:focus {
            border-color: #007bff; /* Màu sắc khi focus */
            outline: none;
            box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
        }

        /* Thiết lập kiểu khi select được disable */
        select:disabled {
            background-color: #e9ecef;
            opacity: 1;
        }

        /* Tạo mũi tên chỉnh xuống */
        select::after {
            content: '\25BC'; /* Một mũi tên nhỏ xuống */
            position: absolute;
            top: 50%;
            right: 12px;
            transform: translateY(-50%);
            pointer-events: none; /* Ngăn chặn sự kiện click vào mũi tên */
        }

        /* Tùy chỉnh kiểu hover */
        select:hover {
            border-color: #6c757d; /* Màu sắc khi hover */
        }

        /* Tùy chỉnh kiểu khi select có option được chọn */
        select option:checked {
            background-color: #f1f1f1; /* Màu sắc khi option được chọn */
        }

    .button {
        padding: 10px;
        border-radius: 50px;
        cursor: pointer;
        border: 0;
        background-color: #3498db;
        box-shadow: rgb(0 0 0 / 5%) 0 0 8px;
        letter-spacing: 1.5px;
        text-transform: uppercase;
        font-size: 15px;
        transition: all 0.5s ease;
    }

        .button:hover {
            letter-spacing: 3px;
            background-color: hsl(261deg 80% 48%);
            color: hsl(0, 0%, 100%);
            box-shadow: rgb(93 24 220) 0px 7px 29px 0px;
        }

        .button:active {
            letter-spacing: 3px;
            background-color: hsl(261deg 80% 48%);
            color: hsl(0, 0%, 100%);
            box-shadow: rgb(34 154 240) 0px 0px 0px 0px;
            transform: translateY(10px);
            transition: 100ms;
        }

    .dow-btn {
        width: 30px;
        height: 30px;
        border: none;
        border-radius: 50%;
        background-color: gray;
        cursor: pointer;
        position: relative;
        transition-duration: .3s;
    }

    .svgIcon {
        fill: rgb(34, 154, 240);
    }


    .dow-btn:hover .tooltip {
        opacity: 1;
        transition-duration: .3s;
    }

    .dow-btn:hover {
        background-color: rgb(34, 154, 240);
        transition-duration: .3s;
    }
</style>
